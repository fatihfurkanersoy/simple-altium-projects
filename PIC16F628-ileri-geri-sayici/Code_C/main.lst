CCS PCM C Compiler, Version 5.015, 5967               28-Oca-21 21:05

               Filename:   C:\Users\fatih\Desktop\Projelerim\Ktun Odev\eem tasarým 1\ilerigeri\Yeni klasör\main.lst

               ROM used:   60 words (3%)
                           Largest free fragment is 1988
               RAM used:   7 (3%) at main() level
                           8 (4%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... // Örnek Program: Konya Teknik Üniversitesi, EEM Bölümü 
.................... #include <16F628A.h> //16F628A mikroiþlemcisi kullanýlýyor 
.................... //////////// Standard Header file for the PIC16F628A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F628A 
....................  
.................... #list 
....................  
.................... #use delay(crystal=4000000) //kristal frekansý 4Mhz 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  GOTO   038 (RETURN)
.................... //B portunun 8 pini LED1-2-3-4-5-6-7-8 ile tanýmlandý 
.................... #define LED1 PIN_B0 
.................... #define LED2 PIN_B1 
.................... #define LED3 PIN_B2 
.................... #define LED4 PIN_B3 
.................... #define LED5 PIN_B4 
.................... #define LED6 PIN_B5 
.................... #define LED7 PIN_B6 
.................... #define LED8 PIN_B7 
.................... #use fast_io(A) 
.................... #use fast_io(B) 
.................... #define buton PIN_A0 
.................... #define bekle 500 
.................... int say=0; 
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  CLRF   20
001D:  MOVLW  07
001E:  MOVWF  1F
001F:  BCF    03.7
.................... { 
.................... set_tris_A(0b00000001); 
0020:  MOVLW  01
0021:  BSF    03.5
0022:  MOVWF  05
.................... set_tris_B(0x00); 
0023:  MOVLW  00
0024:  MOVWF  06
.................... output_B(say); //program baþlatýldýðýnda tüm ledler sönük 
0025:  BCF    03.5
0026:  MOVF   20,W
0027:  MOVWF  06
.................... while(1) 
.................... { 
.................... if (input(buton)) {say=say+1; output_B(say);} 
0028:  BTFSS  05.0
0029:  GOTO   02F
002A:  MOVLW  01
002B:  ADDWF  20,F
002C:  MOVF   20,W
002D:  MOVWF  06
002E:  GOTO   033
.................... else {say=say-1; output_B(say);} 
002F:  MOVLW  01
0030:  SUBWF  20,F
0031:  MOVF   20,W
0032:  MOVWF  06
.................... delay_ms(bekle); 
0033:  MOVLW  02
0034:  MOVWF  21
0035:  MOVLW  FA
0036:  MOVWF  22
0037:  GOTO   004
0038:  DECFSZ 21,F
0039:  GOTO   035
003A:  GOTO   028
.................... } 
.................... } 
003B:  SLEEP

Configuration Fuses:
   Word  1: 3F61   NOWDT PUT XT MCLR BROWNOUT NOLVP NOCPD NOPROTECT
